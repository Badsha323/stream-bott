# ¬© @Avishkarpatil [ Telegram ]

from WebStreamer.bot import StreamBot
from WebStreamer.vars import Var
from WebStreamer.utils.database import Database
from pyrogram import filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
db = Database(Var.DATABASE_URL, Var.SESSION_NAME)

print("start.py started")
START_TEXT = """
<i>üëã H·¥á è,</i>{}\n
<i>I'm Telegram Files Streaming Bot As Well Direct Links Generator</i>\n
<i>üë§ Total Users: {}</i>\n
<i>C ü…™·¥Ñ·¥ã ·¥è…¥ H·¥á ü·¥ò ·¥õ·¥è …¢·¥á·¥õ ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥</i>\n
<i><u>ùó™ùóîùó•ùó°ùóúùó°ùóö üö∏</u></i>
<b>üîû P Ä·¥è…¥ ·¥Ñ·¥è…¥·¥õ·¥á…¥·¥õÍú±  ü·¥á·¥Ä·¥ÖÍú± ·¥õ·¥è ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ  ô·¥Ä…¥  è·¥è·¥ú.</b>\n\n"""

HELP_TEXT = """
<i>- S·¥á…¥·¥Ö ·¥ç·¥á ·¥Ä…¥ è Íú∞…™ ü·¥á (·¥è Ä) ·¥ç·¥á·¥Ö…™·¥Ä Íú∞ Ä·¥è·¥ç ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç.</i>
<i>- I ·¥°…™ ü ü ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥áx·¥õ·¥á Ä…¥·¥Ä ü ·¥Ö…™ Ä·¥á·¥Ñ·¥õ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  ü…™…¥·¥ã !.</i>
<i>- T ú…™s P·¥á Ä·¥ç·¥á·¥Ä…¥·¥õ L…™…¥·¥ã W…™·¥õ ú F·¥Äs·¥õ·¥ás·¥õ S·¥ò·¥á·¥á·¥Ö</i>
<i>- you will get two links, one for download and the another for Download Page</i>
<i>  if first link is not working then Download from Download Page Link</i>
<u>üî∏ ùó™ùóîùó•ùó°ùóúùó°ùóö üö∏</u>\n
<b>üîû P Ä·¥è…¥ ·¥Ñ·¥è…¥·¥õ·¥á…¥·¥õÍú±  ü·¥á·¥Ä·¥ÖÍú± ·¥õ·¥è ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ  ô·¥Ä…¥  è·¥è·¥ú.</b>\n
<i>C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä (·¥è Ä)  Ä·¥á·¥ò·¥è Ä·¥õ  ô·¥ú…¢Íú±</i> <b>: <a href='https://t.me/DeekshithSH'>[ ·¥Ñ ü…™·¥Ñ·¥ã  ú·¥á Ä·¥á ]</a></b>"""

ABOUT_TEXT = """
<b>‚öú M è …¥·¥Ä·¥ç·¥á : Public Link Generator</b>\n
<b>üî∏V·¥á ÄÍú±…™·¥è…¥ : 3.0.3.1</b>\n
<b>üîπL·¥ÄÍú±·¥õ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö : [ 1-Jan-22 ] 10:47 PM</b>
"""

START_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('H·¥á ü·¥ò', callback_data='help'),
        InlineKeyboardButton('A ô·¥è·¥ú·¥õ', callback_data='about'),
        InlineKeyboardButton('C ü·¥ès·¥á', callback_data='close')
        ],
        [InlineKeyboardButton("üì¢ Bot Channel", url=f'https://t.me/{Var.UPDATES_CHANNEL}')]
        ]
    )
HELP_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('H·¥è·¥ç·¥á', callback_data='home'),
        InlineKeyboardButton('A ô·¥è·¥ú·¥õ', callback_data='about'),
        InlineKeyboardButton('C ü·¥ès·¥á', callback_data='close'),
        ],
        [InlineKeyboardButton("üì¢ Bot Channel", url=f'https://t.me/{Var.UPDATES_CHANNEL}')]
        ]
    )
ABOUT_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('H·¥è·¥ç·¥á', callback_data='home'),
        InlineKeyboardButton('H·¥á ü·¥ò', callback_data='help'),
        InlineKeyboardButton('C ü·¥ès·¥á', callback_data='close'),
        ],
        [InlineKeyboardButton("üì¢ Bot Channel", url=f'https://t.me/{Var.UPDATES_CHANNEL}')]
        ]
    )

@StreamBot.on_callback_query()
async def cb_data(bot, update):
    if update.data == "home":
        await update.message.edit_text(
            text=START_TEXT.format(update.from_user.mention),
            disable_web_page_preview=True,
            reply_markup=START_BUTTONS
        )
    elif update.data == "help":
        await update.message.edit_text(
            text=HELP_TEXT,
            disable_web_page_preview=True,
            reply_markup=HELP_BUTTONS
        )
    elif update.data == "about":
        await update.message.edit_text(
            text=ABOUT_TEXT,
            disable_web_page_preview=True,
            reply_markup=ABOUT_BUTTONS
        )
        await update.message.delete()


@StreamBot.on_message(filters.command('start') & filters.private & ~filters.edited)
async def start(b, m):
    if await db.is_user_banned(m.from_user.id):
        await b.send_message(
                chat_id=m.chat.id,
                text="__S·¥è Ä Ä è S…™ Ä, Y·¥è·¥ú ·¥Ä Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ ú·¥á D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä__\n\n @DeekshithSH **T ú·¥á è W…™ ü ü H·¥á ü·¥ò Y·¥è·¥ú**",
                parse_mode="markdown",
                disable_web_page_preview=True
            )
        await b.send_message(
                Var.BIN_CHANNEL,
                f"**Banned User** [{m.from_user.first_name}](tg://user?id={m.from_user.id}) **Trying to Access the bot \n User ID: {m.chat.id,}**"
             )
    else:
        if not await db.is_user_exist(m.from_user.id):
            await db.add_user(m.from_user.id)
            await b.send_message(
                Var.BIN_CHANNEL,
                f"**N·¥á·¥° Us·¥á Ä J·¥è…™…¥·¥á·¥Ö:** \n\n__M è N·¥á·¥° F Ä…™·¥á…¥·¥Ö__ [{m.from_user.first_name}](tg://user?id={m.from_user.id}) __S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö Y·¥è·¥ú Ä B·¥è·¥õ !!__"
            )
        await m.reply_text(
            text=START_TEXT.format(m.from_user.mention, await db.total_users_count()),
            parse_mode="HTML",
            disable_web_page_preview=True,
            reply_markup=START_BUTTONS
              )

@StreamBot.on_message(filters.private & filters.command(["about"]))
async def start(b ,m):
    if await db.is_user_banned(m.from_user.id):
        await b.send_message(
                chat_id=m.chat.id,
                text="__S·¥è Ä Ä è S…™ Ä, Y·¥è·¥ú ·¥Ä Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ ú·¥á D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä__\n\n @DeekshithSH **T ú·¥á è W…™ ü ü H·¥á ü·¥ò Y·¥è·¥ú**",
                parse_mode="markdown",
                disable_web_page_preview=True
            )
        await b.send_message(
                Var.BIN_CHANNEL,
                f"**Banned User** [{m.from_user.first_name}](tg://user?id={m.from_user.id}) **Trying to Access the bot \n User ID: {m.chat.id,}**"
             )
    else:
        if not await db.is_user_exist(m.from_user.id):
            await db.add_user(m.from_user.id)
            await b.send_message(
                Var.BIN_CHANNEL,
                f"**N·¥á·¥° Us·¥á Ä J·¥è…™…¥·¥á·¥Ö:** \n\n__M è N·¥á·¥° F Ä…™·¥á…¥·¥Ö__ [{m.from_user.first_name}](tg://user?id={m.from_user.id}) __S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö Y·¥è·¥ú Ä B·¥è·¥õ !!__"
            )
        await m.reply_text(
        text=ABOUT_TEXT.format(m.from_user.mention),
        disable_web_page_preview=True,
        reply_markup=ABOUT_BUTTONS
            )

@StreamBot.on_message(filters.private & filters.command(["help"]))
async def start(b ,m):
    if await db.is_user_banned(m.from_user.id):
        await b.send_message(
                chat_id=m.chat.id,
                text="__S·¥è Ä Ä è S…™ Ä, Y·¥è·¥ú ·¥Ä Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ ú·¥á D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä__\n\n @DeekshithSH **T ú·¥á è W…™ ü ü H·¥á ü·¥ò Y·¥è·¥ú**",
                parse_mode="markdown",
                disable_web_page_preview=True
            )
        await b.send_message(
                Var.BIN_CHANNEL,
                f"**Banned User** [{m.from_user.first_name}](tg://user?id={m.from_user.id}) **Trying to Access the bot \n User ID: {m.chat.id,}**"
             )
    else:
        if not await db.is_user_exist(m.from_user.id):
            await db.add_user(m.from_user.id)
            await b.send_message(
                Var.BIN_CHANNEL,
                f"**N·¥á·¥° Us·¥á Ä J·¥è…™…¥·¥á·¥Ö:** \n\n__M è N·¥á·¥° F Ä…™·¥á…¥·¥Ö__ [{m.from_user.first_name}](tg://user?id={m.from_user.id}) __S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö Y·¥è·¥ú Ä B·¥è·¥õ !!__"
            )
        await m.reply_text(
        text=HELP_TEXT.format(m.from_user.mention),
        disable_web_page_preview=True,
        reply_markup=HELP_BUTTONS
            )

# ----------------------------- optional -------------------------------------------------------

SETTINGS_TEXT = """
<b>Settings</b>
<i>üî∏No Settings Available</i>
"""

@StreamBot.on_message(filters.private & filters.command("settings"))
async def start(b, m):
    if await db.is_user_banned(m.from_user.id):
        await b.send_message(
                chat_id=m.chat.id,
                text="__S·¥è Ä Ä è S…™ Ä, Y·¥è·¥ú ·¥Ä Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ ú·¥á D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä__\n\n @DeekshithSH **T ú·¥á è W…™ ü ü H·¥á ü·¥ò Y·¥è·¥ú**",
                parse_mode="markdown",
                disable_web_page_preview=True
            )
        await b.send_message(
                Var.BIN_CHANNEL,
                f"**Banned User** [{m.from_user.first_name}](tg://user?id={m.from_user.id}) **Trying to Access the bot \n User ID: {m.chat.id,}**"
             )
    else:
        if not await db.is_user_exist(m.from_user.id):
            await db.add_user(m.from_user.id)
            await b.send_message(
                Var.BIN_CHANNEL,
                f"**N·¥á·¥° Us·¥á Ä J·¥è…™…¥·¥á·¥Ö:** \n\n__M è N·¥á·¥° F Ä…™·¥á…¥·¥Ö__ [{m.from_user.first_name}](tg://user?id={m.from_user.id}) __S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö Y·¥è·¥ú Ä B·¥è·¥õ !!__"
            )
        await m.reply_text(
            text=SETTINGS_TEXT,
            parse_mode="HTML",
            disable_web_page_preview=True,
              )
@StreamBot.on_message(filters.command('ytdl') & filters.private & ~filters.edited)
def start(b, m):
    b.send_message(
        chat_id=m.chat.id,
        text="Hi\nI Removed ytdl command You can use Other Bots\n@oitubebot",
        parse_mode="markdown",
        disable_web_page_preview=True
    )